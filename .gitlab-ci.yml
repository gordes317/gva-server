image: docker:18.09.7-dind

#variables:
#  DOCKER_DRIVER: overlay
#  DEPLOY_HOST_IP: 172.16.26.238
#  DOCKER_HOST: tcp://localhost:2375
#
#services:
#  - docker:dind

variables: # 给buildimage这个job传递的变量
  DEPLOY_HOST_IP: 172.16.26.238
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375 # 与service指定容器通信
services:
  - name: docker:18.09.7-dind

before_script:
  - echo "before_script"
#  - export GOPROXY=https://goproxy.io,direct
#  - export GOPROXY=https://goproxy.cn
  - export http_proxy=https://27.115.15.12:18123/
  - export https_proxy=https://27.115.15.12:18123/

stages:
  - publish
  - deploy

publish:
  stage: publish
  tags:
    - gitlab-runner
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username=$CI_REGISTRY_USER $CI_REGISTRY_URL --password-stdin
#    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --build-arg ConfigEnv=prod .
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker logout $CI_REGISTRY_URL
  only:
    - main

deploy:
  stage: deploy
  when: on_success
  tags:
    - gitlab-runner
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - echo "deploy is starting"
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username=$CI_REGISTRY_USER $CI_REGISTRY_URL --password-stdin
#    - ssh -o StrictHostKeyChecking=no root@$DEPLOY_HOST_IP "echo 123456"
    - ssh -o StrictHostKeyChecking=no root@$DEPLOY_HOST_IP "docker rm -f gvm-server"
    - ssh -o StrictHostKeyChecking=no root@$DEPLOY_HOST_IP "docker run -d --name gvm-server -p 8888:8888 $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - echo "deploy successfully"
  only:
    - main

